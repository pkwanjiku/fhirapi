{
  "{\"sourceRoot\":\"/home/smburu/openhim/docker-mysql-nodejs/nodejs-microservice/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/smburu/openhim/docker-mysql-nodejs/nodejs-microservice\",\"filename\":\"/home/smburu/openhim/docker-mysql-nodejs/nodejs-microservice/index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/smburu/openhim/docker-mysql-nodejs/nodejs-microservice\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/smburu/openhim/docker-mysql-nodejs/nodejs-microservice/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/smburu/openhim/docker-mysql-nodejs/nodejs-microservice",
      "filename": "/home/smburu/openhim/docker-mysql-nodejs/nodejs-microservice/index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/smburu/openhim/docker-mysql-nodejs/nodejs-microservice",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/smburu/openhim/docker-mysql-nodejs/nodejs-microservice/index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/smburu/openhim/docker-mysql-nodejs/nodejs-microservice/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/smburu/openhim/docker-mysql-nodejs/nodejs-microservice/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _openhimMediatorUtils = require(\"openhim-mediator-utils\");\n\nvar _mediatorConfig = _interopRequireDefault(require(\"./mediatorConfig.json\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * @author Stephen Mburu <ahoazure9@gmail.com>\n */\nvar app = require('express')();\n\nvar mysql = require('mysql');\n\nvar bodyParser = require('body-parser');\n\napp.use(bodyParser.json({\n  limit: '8mb'\n})); // support json encoded bodies\n// environment variables\n\nvar PORT = process.env.PORT || 4000;\nvar HOST = process.env.HOST || '0.0.0.0'; // mysql credentials\n\nvar connection = mysql.createConnection({\n  host: process.env.MYSQL_HOST || '172.17.0.2',\n  user: process.env.MYSQL_USER || 'root',\n  password: process.env.MYSQL_PASSWORD || 'password',\n  database: process.env.MYSQL_DATABASE || 'test'\n});\nconnection.connect(function (err) {\n  if (err) {\n    console.error('error connecting mysql: ', err);\n  } else {\n    console.log('mysql connection successful');\n    app.listen(PORT, HOST, function (err) {\n      if (err) {\n        console.error('Error starting  server', err);\n      } else {\n        console.log('server listening at port ' + PORT);\n      }\n    });\n  }\n}); // home page\n\napp.get('/', function (req, res) {\n  res.json({\n    success: true,\n    message: 'Hello Healthix. This is a Database-Passthrough Mediator'\n  });\n}); // insert a student into database\n\napp.post('/add-student', function (req, res) {\n  var student = req.body;\n  var query = 'INSERT INTO students values(?, ?)';\n  connection.query(query, [student.rollNo, student.name], function (err, results, fields) {\n    if (err) {\n      console.error(err);\n      res.json({\n        success: false,\n        message: 'Error occured'\n      });\n    } else {\n      res.json({\n        success: true,\n        message: 'Successfully added student'\n      });\n    }\n  });\n}); // fetch all students\n\napp.post('/get-students', function (req, res) {\n  var query = 'SELECT * FROM students';\n  connection.query(query, function (err, results, fields) {\n    if (err) {\n      console.error(err);\n      res.json({\n        success: false,\n        message: 'Error occured'\n      });\n    } else {\n      res.json({\n        success: true,\n        result: results\n      });\n    }\n  });\n});\nvar openhimConfig = {\n  username: 'root@openhim.org',\n  password: 'mburu2834',\n  apiURL: 'https://localhost:8080',\n  trustSelfSigned: true\n};\n(0, _openhimMediatorUtils.registerMediator)(openhimConfig, _mediatorConfig[\"default\"], function (err) {\n  if (err) {\n    console.error('Mediatior registration failed', err);\n  }\n\n  console.log('New mediator registration successful');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsInJlcXVpcmUiLCJteXNxbCIsImJvZHlQYXJzZXIiLCJ1c2UiLCJqc29uIiwibGltaXQiLCJQT1JUIiwicHJvY2VzcyIsImVudiIsIkhPU1QiLCJjb25uZWN0aW9uIiwiY3JlYXRlQ29ubmVjdGlvbiIsImhvc3QiLCJNWVNRTF9IT1NUIiwidXNlciIsIk1ZU1FMX1VTRVIiLCJwYXNzd29yZCIsIk1ZU1FMX1BBU1NXT1JEIiwiZGF0YWJhc2UiLCJNWVNRTF9EQVRBQkFTRSIsImNvbm5lY3QiLCJlcnIiLCJjb25zb2xlIiwiZXJyb3IiLCJsb2ciLCJsaXN0ZW4iLCJnZXQiLCJyZXEiLCJyZXMiLCJzdWNjZXNzIiwibWVzc2FnZSIsInBvc3QiLCJzdHVkZW50IiwiYm9keSIsInF1ZXJ5Iiwicm9sbE5vIiwibmFtZSIsInJlc3VsdHMiLCJmaWVsZHMiLCJyZXN1bHQiLCJvcGVuaGltQ29uZmlnIiwidXNlcm5hbWUiLCJhcGlVUkwiLCJ0cnVzdFNlbGZTaWduZWQiLCJtZWRpYXRvckNvbmZpZyJdLCJtYXBwaW5ncyI6Ijs7QUFJQTs7QUFDQTs7OztBQUxBOzs7QUFPQSxJQUFNQSxHQUFHLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQVAsRUFBWjs7QUFDQSxJQUFNQyxLQUFLLEdBQUdELE9BQU8sQ0FBQyxPQUFELENBQXJCOztBQUVBLElBQU1FLFVBQVUsR0FBR0YsT0FBTyxDQUFDLGFBQUQsQ0FBMUI7O0FBRUFELEdBQUcsQ0FBQ0ksR0FBSixDQUFRRCxVQUFVLENBQUNFLElBQVgsQ0FBZ0I7QUFDcEJDLEVBQUFBLEtBQUssRUFBRTtBQURhLENBQWhCLENBQVIsRSxDQUVLO0FBRUw7O0FBQ0EsSUFBTUMsSUFBSSxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsSUFBWixJQUFvQixJQUFqQztBQUNBLElBQU1HLElBQUksR0FBR0YsT0FBTyxDQUFDQyxHQUFSLENBQVlDLElBQVosSUFBb0IsU0FBakMsQyxDQUVBOztB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LFFBQUFBLE9BQU8sRUFBRTtBQUZELE9BQVQ7QUFJQSxLQU5ELE1BTU87QUFDTkYsTUFBQUEsR0FBRyxDQUFDeEIsSUFBSixDQUFTO0FBQ1J5QixRQUFBQSxPQUFPLEVBQUUsSUFERDtBQUVSVSxRQUFBQSxNQUFNLEVBQUVGO0FBRkEsT0FBVDtBQUlBO0FBQ0QsR0FiRDtBQWNILENBaEJEO0FBa0JBLElBQU1HLGFBQWEsR0FBRztBQUNwQkMsRUFBQUEsUUFBUSxFQUFFLGtCQURVO0FBRXBCekIsRUFBQUEsUUFBUSxFQUFFLFdBRlU7QUFHcEIwQixFQUFBQSxNQUFNLEVBQUUsd0JBSFk7QUFJcEJDLEVBQUFBLGVBQWUsRUFBRTtBQUpHLENBQXRCO0FBUUEsNENBQWlCSCxhQUFqQixFQUFnQ0ksMEJBQWhDLEVBQWdELFVBQUF2QixHQUFHLEVBQUk7QUFDckQsTUFBSUEsR0FBSixFQUFTO0FBQ1BDLElBQUFBLE9BQU8sQ0FBQ0MsS0FBUixDQUFjLCtCQUFkLEVBQThDRixHQUE5QztBQUNEOztBQUNDQyxFQUFBQSxPQUFPLENBQUNFLEdBQVIsQ0FBWSxzQ0FBWjtBQUNILENBTEQiLCJzb3VyY2VSb290IjoiL2hvbWUvc21idXJ1L29wZW5oaW0vZG9ja2VyLW15c3FsLW5vZGVqcy9ub2RlanMtbWljcm9zZXJ2aWNlLyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGF1dGhvciBTdGVwaGVuIE1idXJ1IDxhaG9henVyZTlAZ21haWwuY29tPlxuICovXG5cbmltcG9ydCB7IHJlZ2lzdGVyTWVkaWF0b3IgfSBmcm9tICdvcGVuaGltLW1lZGlhdG9yLXV0aWxzJ1xuaW1wb3J0IG1lZGlhdG9yQ29uZmlnIGZyb20gJy4vbWVkaWF0b3JDb25maWcuanNvbidcblxuY29uc3QgYXBwID0gcmVxdWlyZSgnZXhwcmVzcycpKCk7XG5jb25zdCBteXNxbCA9IHJlcXVpcmUoJ215c3FsJyk7XG5cbmNvbnN0IGJvZHlQYXJzZXIgPSByZXF1aXJlKCdib2R5LXBhcnNlcicpO1xuXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbih7XG4gICAgbGltaXQ6ICc4bWInXG59KSk7IC8vIHN1cHBvcnQganNvbiBlbmNvZGVkIGJvZGllc1xuXG4vLyBlbnZpcm9ubWVudCB2YXJpYWJsZXNcbmNvbnN0IFBPUlQgPSBwcm9jZXNzLmVudi5QT1JUIHx8IDQwMDA7XG5jb25zdCBIT1NUID0gcHJvY2Vzcy5lbnYuSE9TVCB8fCAnMC4wLjAuMCc7XG5cbi8vIG15c3FsIGNyZWRlbnRpYWxzXG5jb25zdCBjb25uZWN0aW9uID0gbXlzcWwuY3JlYXRlQ29ubmVjdGlvbih7XG5cdGhvc3Q6IHByb2Nlc3MuZW52Lk1ZU1FMX0hPU1QgfHwgJzE3Mi4xNy4wLjInLFxuXHR1c2VyOiBwcm9jZXNzLmVudi5NWVNRTF9VU0VSIHx8ICdyb290Jyxcblx0cGFzc3dvcmQ6IHByb2Nlc3MuZW52Lk1ZU1FMX1BBU1NXT1JEIHx8ICdwYXNzd29yZCcsXG5cdGRhdGFiYXNlOiBwcm9jZXNzLmVudi5NWVNRTF9EQVRBQkFTRSB8fCAndGVzdCdcbn0pO1xuXG5jb25uZWN0aW9uLmNvbm5lY3QoKGVycikgPT4ge1xuXHRpZiAoZXJyKSB7XG5cdFx0Y29uc29sZS5lcnJvcignZXJyb3IgY29ubmVjdGluZyBteXNxbDogJywgZXJyKTtcblx0fSBlbHNlIHtcblx0XHRjb25zb2xlLmxvZygnbXlzcWwgY29ubmVjdGlvbiBzdWNjZXNzZnVsJyk7XG5cdFx0YXBwLmxpc3RlbihQT1JULCBIT1NULCAoZXJyKSA9PiB7XG5cdFx0XHRpZiAoZXJyKSB7XG5cdFx0XHRcdGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHN0YXJ0aW5nICBzZXJ2ZXInLCBlcnIpO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0Y29uc29sZS5sb2coJ3NlcnZlciBsaXN0ZW5pbmcgYXQgcG9ydCAnICsgUE9SVCk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdH1cbn0pO1xuXG4vLyBob21lIHBhZ2VcbmFwcC5nZXQoJy8nLCAocmVxLCByZXMpID0+IHtcblx0cmVzLmpzb24oe1xuXHRcdHN1Y2Nlc3M6IHRydWUsXG5cdFx0bWVzc2FnZTogJ0hlbGxvIEhlYWx0aGl4LiBUaGlzIGlzIGEgRGF0YWJhc2UtUGFzc3Rocm91Z2ggTWVkaWF0b3InXG5cdH0pO1xufSk7XG5cbi8vIGluc2VydCBhIHN0dWRlbnQgaW50byBkYXRhYmFzZVxuYXBwLnBvc3QoJy9hZGQtc3R1ZGVudCcsIChyZXEsIHJlcykgPT4ge1xuXHRjb25zdCBzdHVkZW50ID0gcmVxLmJvZHk7XG5cdGNvbnN0IHF1ZXJ5ID0gJ0lOU0VSVCBJTlRPIHN0dWRlbnRzIHZhbHVlcyg/LCA/KSc7XG5cblx0Y29ubmVjdGlvbi5xdWVyeShxdWVyeSwgW3N0dWRlbnQucm9sbE5vLCBzdHVkZW50Lm5hbWVdLCAoZXJyLCByZXN1bHRzLCBmaWVsZHMpID0+IHtcblx0XHRpZiAoZXJyKSB7XG5cdFx0XHRjb25zb2xlLmVycm9yKGVycik7XG5cdFx0XHRyZXMuanNvbih7XG5cdFx0XHRcdHN1Y2Nlc3M6IGZhbHNlLFxuXHRcdFx0XHRtZXNzYWdlOiAnRXJyb3Igb2NjdXJlZCdcblx0XHRcdH0pO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRyZXMuanNvbih7XG5cdFx0XHRcdHN1Y2Nlc3M6IHRydWUsXG5cdFx0XHRcdG1lc3NhZ2U6ICdTdWNjZXNzZnVsbHkgYWRkZWQgc3R1ZGVudCdcblx0XHRcdH0pO1xuXHRcdH1cblx0fSk7XG59KTtcblxuLy8gZmV0Y2ggYWxsIHN0dWRlbnRzXG5hcHAucG9zdCgnL2dldC1zdHVkZW50cycsIChyZXEsIHJlcykgPT4ge1xuXHRjb25zdCBxdWVyeSA9ICdTRUxFQ1QgKiBGUk9NIHN0dWRlbnRzJztcbiAgICBjb25uZWN0aW9uLnF1ZXJ5KHF1ZXJ5LCAoZXJyLCByZXN1bHRzLCBmaWVsZHMpID0+IHtcbiAgICBcdGlmIChlcnIpIHtcbiAgICBcdFx0Y29uc29sZS5lcnJvcihlcnIpO1xuICAgIFx0XHRyZXMuanNvbih7XG4gICAgXHRcdFx0c3VjY2VzczogZmFsc2UsXG4gICAgXHRcdFx0bWVzc2FnZTogJ0Vycm9yIG9jY3VyZWQnXG4gICAgXHRcdH0pO1xuICAgIFx0fSBlbHNlIHtcbiAgICBcdFx0cmVzLmpzb24oe1xuICAgIFx0XHRcdHN1Y2Nlc3M6IHRydWUsXG4gICAgXHRcdFx0cmVzdWx0OiByZXN1bHRzXG4gICAgXHRcdH0pO1xuICAgIFx0fVxuICAgIH0pO1xufSk7XG5cbmNvbnN0IG9wZW5oaW1Db25maWcgPSB7XG4gIHVzZXJuYW1lOiAncm9vdEBvcGVuaGltLm9yZycsXG4gIHBhc3N3b3JkOiAnbWJ1cnUyODM0JyxcbiAgYXBpVVJMOiAnaHR0cHM6Ly9sb2NhbGhvc3Q6ODA4MCcsXG4gIHRydXN0U2VsZlNpZ25lZDogdHJ1ZVxufVxuXG5cbnJlZ2lzdGVyTWVkaWF0b3Iob3BlbmhpbUNvbmZpZywgbWVkaWF0b3JDb25maWcsIGVyciA9PiB7XG4gIGlmIChlcnIpIHtcbiAgICBjb25zb2xlLmVycm9yKCdNZWRpYXRpb3IgcmVnaXN0cmF0aW9uIGZhaWxlZCcsZXJyKVxuICB9XG4gICAgY29uc29sZS5sb2coJ05ldyBtZWRpYXRvciByZWdpc3RyYXRpb24gc3VjY2Vzc2Z1bCcpO1xufSlcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "require",
        "mysql",
        "bodyParser",
        "use",
        "json",
        "limit",
        "PORT",
        "process",
        "env",
        "HOST",
        "connection",
        "createConnection",
        "host",
        "MYSQL_HOST",
        "user",
        "MYSQL_USER",
        "password",
        "MYSQL_PASSWORD",
        "database",
        "MYSQL_DATABASE",
        "connect",
        "err",
        "console",
        "error",
        "log",
        "listen",
        "get",
        "req",
        "res",
        "success",
        "message",
        "post",
        "student",
        "body",
        "query",
        "rollNo",
        "name",
        "results",
        "fields",
        "result",
        "openhimConfig",
        "username",
        "apiURL",
        "trustSelfSigned",
        "mediatorConfig"
      ],
      "mappings": "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",
      "sourceRoot": "/home/smburu/openhim/docker-mysql-nodejs/nodejs-microservice/",
      "sourcesContent": [
        "/**\n * @author Stephen Mburu <ahoazure9@gmail.com>\n */\n\nimport { registerMediator } from 'openhim-mediator-utils'\nimport mediatorConfig from './mediatorConfig.json'\n\nconst app = require('express')();\nconst mysql = require('mysql');\n\nconst bodyParser = require('body-parser');\n\napp.use(bodyParser.json({\n    limit: '8mb'\n})); // support json encoded bodies\n\n// environment variables\nconst PORT = process.env.PORT || 4000;\nconst HOST = process.env.HOST || '0.0.0.0';\n\n// mysql credentials\nconst connection = mysql.createConnection({\n\thost: process.env.MYSQL_HOST || '172.17.0.2',\n\tuser: process.env.MYSQL_USER || 'root',\n\tpassword: process.env.MYSQL_PASSWORD || 'password',\n\tdatabase: process.env.MYSQL_DATABASE || 'test'\n});\n\nconnection.connect((err) => {\n\tif (err) {\n\t\tconsole.error('error connecting mysql: ', err);\n\t} else {\n\t\tconsole.log('mysql connection successful');\n\t\tapp.listen(PORT, HOST, (err) => {\n\t\t\tif (err) {\n\t\t\t\tconsole.error('Error starting  server', err);\n\t\t\t} else {\n\t\t\t\tconsole.log('server listening at port ' + PORT);\n\t\t\t}\n\t\t});\n\t}\n});\n\n// home page\napp.get('/', (req, res) => {\n\tres.json({\n\t\tsuccess: true,\n\t\tmessage: 'Hello Healthix. This is a Database-Passthrough Mediator'\n\t});\n});\n\n// insert a student into database\napp.post('/add-student', (req, res) => {\n\tconst student = req.body;\n\tconst query = 'INSERT INTO students values(?, ?)';\n\n\tconnection.query(query, [student.rollNo, student.name], (err, results, fields) => {\n\t\tif (err) {\n\t\t\tconsole.error(err);\n\t\t\tres.json({\n\t\t\t\tsuccess: false,\n\t\t\t\tmessage: 'Error occured'\n\t\t\t});\n\t\t} else {\n\t\t\tres.json({\n\t\t\t\tsuccess: true,\n\t\t\t\tmessage: 'Successfully added student'\n\t\t\t});\n\t\t}\n\t});\n});\n\n// fetch all students\napp.post('/get-students', (req, res) => {\n\tconst query = 'SELECT * FROM students';\n    connection.query(query, (err, results, fields) => {\n    \tif (err) {\n    \t\tconsole.error(err);\n    \t\tres.json({\n    \t\t\tsuccess: false,\n    \t\t\tmessage: 'Error occured'\n    \t\t});\n    \t} else {\n    \t\tres.json({\n    \t\t\tsuccess: true,\n    \t\t\tresult: results\n    \t\t});\n    \t}\n    });\n});\n\nconst openhimConfig = {\n  username: 'root@openhim.org',\n  password: 'mburu2834',\n  apiURL: 'https://localhost:8080',\n  trustSelfSigned: true\n}\n\n\nregisterMediator(openhimConfig, mediatorConfig, err => {\n  if (err) {\n    console.error('Mediatior registration failed',err)\n  }\n    console.log('New mediator registration successful');\n})\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1598079120189
  },
  "{\"sourceRoot\":\"/home/smburu/openhim/mediator-node-db/nodejs-microservice/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/smburu/openhim/mediator-node-db/nodejs-microservice\",\"filename\":\"/home/smburu/openhim/mediator-node-db/nodejs-microservice/index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/smburu/openhim/mediator-node-db/nodejs-microservice\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/smburu/openhim/mediator-node-db/nodejs-microservice/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/smburu/openhim/mediator-node-db/nodejs-microservice",
      "filename": "/home/smburu/openhim/mediator-node-db/nodejs-microservice/index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/smburu/openhim/mediator-node-db/nodejs-microservice",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/smburu/openhim/mediator-node-db/nodejs-microservice/index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/smburu/openhim/mediator-node-db/nodejs-microservice/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/smburu/openhim/mediator-node-db/nodejs-microservice/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _openhimMediatorUtils = require(\"openhim-mediator-utils\");\n\nvar _mediatorConfig = _interopRequireDefault(require(\"./mediatorConfig.json\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * @author Stephen Mburu <ahoazure9@gmail.com>\n */\nvar app = require('express')();\n\nvar mysql = require('mysql');\n\nvar bodyParser = require('body-parser');\n\napp.use(bodyParser.json({\n  limit: '8mb'\n})); // support json encoded bodies\n// environment variables\n\nvar PORT = process.env.PORT || 4000;\nvar HOST = process.env.HOST || '0.0.0.0'; // mysql credentials\n\nvar connection = mysql.createConnection({\n  host: process.env.MYSQL_HOST || '172.17.0.2',\n  user: process.env.MYSQL_USER || 'root',\n  password: process.env.MYSQL_PASSWORD || 'password',\n  database: process.env.MYSQL_DATABASE || 'test'\n});\nconnection.connect(function (err) {\n  if (err) {\n    console.error('error connecting mysql: ', err);\n  } else {\n    console.log('mysql connection successful');\n    app.listen(PORT, HOST, function (err) {\n      if (err) {\n        console.error('Error starting  server', err);\n      } else {\n        console.log('server listening at port ' + PORT);\n      }\n    });\n  }\n}); // home page\n\napp.get('/', function (req, res) {\n  res.json({\n    success: true,\n    message: 'Hello Healthix. This is a Database-Passthrough Mediator'\n  });\n}); // insert a student into database\n\napp.post('/add-student', function (req, res) {\n  var student = req.body;\n  var query = 'INSERT INTO students values(?, ?)';\n  connection.query(query, [student.rollNo, student.name], function (err, results, fields) {\n    if (err) {\n      console.error(err);\n      res.json({\n        success: false,\n        message: 'Error occured'\n      });\n    } else {\n      res.json({\n        success: true,\n        message: 'Successfully added student'\n      });\n    }\n  });\n}); // fetch all students\n\napp.post('/get-students', function (req, res) {\n  var query = 'SELECT * FROM students';\n  connection.query(query, function (err, results, fields) {\n    if (err) {\n      console.error(err);\n      res.json({\n        success: false,\n        message: 'Error occured'\n      });\n    } else {\n      res.json({\n        success: true,\n        result: results\n      });\n    }\n  });\n});\nvar openhimConfig = {\n  username: 'root@openhim.org',\n  password: 'mburu2834',\n  apiURL: 'https://localhost:8080',\n  trustSelfSigned: true\n};\n(0, _openhimMediatorUtils.registerMediator)(openhimConfig, _mediatorConfig[\"default\"], function (err) {\n  if (err) {\n    console.error('Mediatior registration failed', err);\n  }\n\n  console.log('New mediator registration successful');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsInJlcXVpcmUiLCJteXNxbCIsImJvZHlQYXJzZXIiLCJ1c2UiLCJqc29uIiwibGltaXQiLCJQT1JUIiwicHJvY2VzcyIsImVudiIsIkhPU1QiLCJjb25uZWN0aW9uIiwiY3JlYXRlQ29ubmVjdGlvbiIsImhvc3QiLCJNWVNRTF9IT1NUIiwidXNlciIsIk1ZU1FMX1VTRVIiLCJwYXNzd29yZCIsIk1ZU1FMX1BBU1NXT1JEIiwiZGF0YWJhc2UiLCJNWVNRTF9EQVRBQkFTRSIsImNvbm5lY3QiLCJlcnIiLCJjb25zb2xlIiwiZXJyb3IiLCJsb2ciLCJsaXN0ZW4iLCJnZXQiLCJyZXEiLCJyZXMiLCJzdWNjZXNzIiwibWVzc2FnZSIsInBvc3QiLCJzdHVkZW50IiwiYm9keSIsInF1ZXJ5Iiwicm9sbE5vIiwibmFtZSIsInJlc3VsdHMiLCJmaWVsZHMiLCJyZXN1bHQiLCJvcGVuaGltQ29uZmlnIiwidXNlcm5hbWUiLCJhcGlVUkwiLCJ0cnVzdFNlbGZTaWduZWQiLCJtZWRpYXRvckNvbmZpZyJdLCJtYXBwaW5ncyI6Ijs7QUFJQTs7QUFDQTs7OztBQUxBOzs7QUFPQSxJQUFNQSxHQUFHLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQVAsRUFBWjs7QUFDQSxJQUFNQyxLQUFLLEdBQUdELE9BQU8sQ0FBQyxPQUFELENBQXJCOztBQUVBLElBQU1FLFVBQVUsR0FBR0YsT0FBTyxDQUFDLGFBQUQsQ0FBMUI7O0FBRUFELEdBQUcsQ0FBQ0ksR0FBSixDQUFRRCxVQUFVLENBQUNFLElBQVgsQ0FBZ0I7QUFDcEJDLEVBQUFBLEtBQUssRUFBRTtBQURhLENBQWhCLENBQVIsRSxDQUVLO0FBRUw7O0FBQ0EsSUFBTUMsSUFBSSxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsSUFBWixJQUFvQixJQUFqQztBQUNBLElBQU1HLElBQUksR0FBR0YsT0FBTyxDQUFDQyxHQUFSLENBQVlDLElBQVosSUFBb0IsU0FBakMsQyxDQUVBOztB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LFFBQUFBLE9BQU8sRUFBRTtBQUZELE9BQVQ7QUFJQSxLQU5ELE1BTU87QUFDTkYsTUFBQUEsR0FBRyxDQUFDeEIsSUFBSixDQUFTO0FBQ1J5QixRQUFBQSxPQUFPLEVBQUUsSUFERDtBQUVSVSxRQUFBQSxNQUFNLEVBQUVGO0FBRkEsT0FBVDtBQUlBO0FBQ0QsR0FiRDtBQWNILENBaEJEO0FBa0JBLElBQU1HLGFBQWEsR0FBRztBQUNwQkMsRUFBQUEsUUFBUSxFQUFFLGtCQURVO0FBRXBCekIsRUFBQUEsUUFBUSxFQUFFLFdBRlU7QUFHcEIwQixFQUFBQSxNQUFNLEVBQUUsd0JBSFk7QUFJcEJDLEVBQUFBLGVBQWUsRUFBRTtBQUpHLENBQXRCO0FBUUEsNENBQWlCSCxhQUFqQixFQUFnQ0ksMEJBQWhDLEVBQWdELFVBQUF2QixHQUFHLEVBQUk7QUFDckQsTUFBSUEsR0FBSixFQUFTO0FBQ1BDLElBQUFBLE9BQU8sQ0FBQ0MsS0FBUixDQUFjLCtCQUFkLEVBQThDRixHQUE5QztBQUNEOztBQUNDQyxFQUFBQSxPQUFPLENBQUNFLEdBQVIsQ0FBWSxzQ0FBWjtBQUNILENBTEQiLCJzb3VyY2VSb290IjoiL2hvbWUvc21idXJ1L29wZW5oaW0vbWVkaWF0b3Itbm9kZS1kYi9ub2RlanMtbWljcm9zZXJ2aWNlLyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGF1dGhvciBTdGVwaGVuIE1idXJ1IDxhaG9henVyZTlAZ21haWwuY29tPlxuICovXG5cbmltcG9ydCB7IHJlZ2lzdGVyTWVkaWF0b3IgfSBmcm9tICdvcGVuaGltLW1lZGlhdG9yLXV0aWxzJ1xuaW1wb3J0IG1lZGlhdG9yQ29uZmlnIGZyb20gJy4vbWVkaWF0b3JDb25maWcuanNvbidcblxuY29uc3QgYXBwID0gcmVxdWlyZSgnZXhwcmVzcycpKCk7XG5jb25zdCBteXNxbCA9IHJlcXVpcmUoJ215c3FsJyk7XG5cbmNvbnN0IGJvZHlQYXJzZXIgPSByZXF1aXJlKCdib2R5LXBhcnNlcicpO1xuXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbih7XG4gICAgbGltaXQ6ICc4bWInXG59KSk7IC8vIHN1cHBvcnQganNvbiBlbmNvZGVkIGJvZGllc1xuXG4vLyBlbnZpcm9ubWVudCB2YXJpYWJsZXNcbmNvbnN0IFBPUlQgPSBwcm9jZXNzLmVudi5QT1JUIHx8IDQwMDA7XG5jb25zdCBIT1NUID0gcHJvY2Vzcy5lbnYuSE9TVCB8fCAnMC4wLjAuMCc7XG5cbi8vIG15c3FsIGNyZWRlbnRpYWxzXG5jb25zdCBjb25uZWN0aW9uID0gbXlzcWwuY3JlYXRlQ29ubmVjdGlvbih7XG5cdGhvc3Q6IHByb2Nlc3MuZW52Lk1ZU1FMX0hPU1QgfHwgJzE3Mi4xNy4wLjInLFxuXHR1c2VyOiBwcm9jZXNzLmVudi5NWVNRTF9VU0VSIHx8ICdyb290Jyxcblx0cGFzc3dvcmQ6IHByb2Nlc3MuZW52Lk1ZU1FMX1BBU1NXT1JEIHx8ICdwYXNzd29yZCcsXG5cdGRhdGFiYXNlOiBwcm9jZXNzLmVudi5NWVNRTF9EQVRBQkFTRSB8fCAndGVzdCdcbn0pO1xuXG5jb25uZWN0aW9uLmNvbm5lY3QoKGVycikgPT4ge1xuXHRpZiAoZXJyKSB7XG5cdFx0Y29uc29sZS5lcnJvcignZXJyb3IgY29ubmVjdGluZyBteXNxbDogJywgZXJyKTtcblx0fSBlbHNlIHtcblx0XHRjb25zb2xlLmxvZygnbXlzcWwgY29ubmVjdGlvbiBzdWNjZXNzZnVsJyk7XG5cdFx0YXBwLmxpc3RlbihQT1JULCBIT1NULCAoZXJyKSA9PiB7XG5cdFx0XHRpZiAoZXJyKSB7XG5cdFx0XHRcdGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHN0YXJ0aW5nICBzZXJ2ZXInLCBlcnIpO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0Y29uc29sZS5sb2coJ3NlcnZlciBsaXN0ZW5pbmcgYXQgcG9ydCAnICsgUE9SVCk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdH1cbn0pO1xuXG4vLyBob21lIHBhZ2VcbmFwcC5nZXQoJy8nLCAocmVxLCByZXMpID0+IHtcblx0cmVzLmpzb24oe1xuXHRcdHN1Y2Nlc3M6IHRydWUsXG5cdFx0bWVzc2FnZTogJ0hlbGxvIEhlYWx0aGl4LiBUaGlzIGlzIGEgRGF0YWJhc2UtUGFzc3Rocm91Z2ggTWVkaWF0b3InXG5cdH0pO1xufSk7XG5cbi8vIGluc2VydCBhIHN0dWRlbnQgaW50byBkYXRhYmFzZVxuYXBwLnBvc3QoJy9hZGQtc3R1ZGVudCcsIChyZXEsIHJlcykgPT4ge1xuXHRjb25zdCBzdHVkZW50ID0gcmVxLmJvZHk7XG5cdGNvbnN0IHF1ZXJ5ID0gJ0lOU0VSVCBJTlRPIHN0dWRlbnRzIHZhbHVlcyg/LCA/KSc7XG5cblx0Y29ubmVjdGlvbi5xdWVyeShxdWVyeSwgW3N0dWRlbnQucm9sbE5vLCBzdHVkZW50Lm5hbWVdLCAoZXJyLCByZXN1bHRzLCBmaWVsZHMpID0+IHtcblx0XHRpZiAoZXJyKSB7XG5cdFx0XHRjb25zb2xlLmVycm9yKGVycik7XG5cdFx0XHRyZXMuanNvbih7XG5cdFx0XHRcdHN1Y2Nlc3M6IGZhbHNlLFxuXHRcdFx0XHRtZXNzYWdlOiAnRXJyb3Igb2NjdXJlZCdcblx0XHRcdH0pO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRyZXMuanNvbih7XG5cdFx0XHRcdHN1Y2Nlc3M6IHRydWUsXG5cdFx0XHRcdG1lc3NhZ2U6ICdTdWNjZXNzZnVsbHkgYWRkZWQgc3R1ZGVudCdcblx0XHRcdH0pO1xuXHRcdH1cblx0fSk7XG59KTtcblxuLy8gZmV0Y2ggYWxsIHN0dWRlbnRzXG5hcHAucG9zdCgnL2dldC1zdHVkZW50cycsIChyZXEsIHJlcykgPT4ge1xuXHRjb25zdCBxdWVyeSA9ICdTRUxFQ1QgKiBGUk9NIHN0dWRlbnRzJztcbiAgICBjb25uZWN0aW9uLnF1ZXJ5KHF1ZXJ5LCAoZXJyLCByZXN1bHRzLCBmaWVsZHMpID0+IHtcbiAgICBcdGlmIChlcnIpIHtcbiAgICBcdFx0Y29uc29sZS5lcnJvcihlcnIpO1xuICAgIFx0XHRyZXMuanNvbih7XG4gICAgXHRcdFx0c3VjY2VzczogZmFsc2UsXG4gICAgXHRcdFx0bWVzc2FnZTogJ0Vycm9yIG9jY3VyZWQnXG4gICAgXHRcdH0pO1xuICAgIFx0fSBlbHNlIHtcbiAgICBcdFx0cmVzLmpzb24oe1xuICAgIFx0XHRcdHN1Y2Nlc3M6IHRydWUsXG4gICAgXHRcdFx0cmVzdWx0OiByZXN1bHRzXG4gICAgXHRcdH0pO1xuICAgIFx0fVxuICAgIH0pO1xufSk7XG5cbmNvbnN0IG9wZW5oaW1Db25maWcgPSB7XG4gIHVzZXJuYW1lOiAncm9vdEBvcGVuaGltLm9yZycsXG4gIHBhc3N3b3JkOiAnbWJ1cnUyODM0JyxcbiAgYXBpVVJMOiAnaHR0cHM6Ly9sb2NhbGhvc3Q6ODA4MCcsXG4gIHRydXN0U2VsZlNpZ25lZDogdHJ1ZVxufVxuXG5cbnJlZ2lzdGVyTWVkaWF0b3Iob3BlbmhpbUNvbmZpZywgbWVkaWF0b3JDb25maWcsIGVyciA9PiB7XG4gIGlmIChlcnIpIHtcbiAgICBjb25zb2xlLmVycm9yKCdNZWRpYXRpb3IgcmVnaXN0cmF0aW9uIGZhaWxlZCcsZXJyKVxuICB9XG4gICAgY29uc29sZS5sb2coJ05ldyBtZWRpYXRvciByZWdpc3RyYXRpb24gc3VjY2Vzc2Z1bCcpO1xufSlcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "require",
        "mysql",
        "bodyParser",
        "use",
        "json",
        "limit",
        "PORT",
        "process",
        "env",
        "HOST",
        "connection",
        "createConnection",
        "host",
        "MYSQL_HOST",
        "user",
        "MYSQL_USER",
        "password",
        "MYSQL_PASSWORD",
        "database",
        "MYSQL_DATABASE",
        "connect",
        "err",
        "console",
        "error",
        "log",
        "listen",
        "get",
        "req",
        "res",
        "success",
        "message",
        "post",
        "student",
        "body",
        "query",
        "rollNo",
        "name",
        "results",
        "fields",
        "result",
        "openhimConfig",
        "username",
        "apiURL",
        "trustSelfSigned",
        "mediatorConfig"
      ],
      "mappings": "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",
      "sourceRoot": "/home/smburu/openhim/mediator-node-db/nodejs-microservice/",
      "sourcesContent": [
        "/**\n * @author Stephen Mburu <ahoazure9@gmail.com>\n */\n\nimport { registerMediator } from 'openhim-mediator-utils'\nimport mediatorConfig from './mediatorConfig.json'\n\nconst app = require('express')();\nconst mysql = require('mysql');\n\nconst bodyParser = require('body-parser');\n\napp.use(bodyParser.json({\n    limit: '8mb'\n})); // support json encoded bodies\n\n// environment variables\nconst PORT = process.env.PORT || 4000;\nconst HOST = process.env.HOST || '0.0.0.0';\n\n// mysql credentials\nconst connection = mysql.createConnection({\n\thost: process.env.MYSQL_HOST || '172.17.0.2',\n\tuser: process.env.MYSQL_USER || 'root',\n\tpassword: process.env.MYSQL_PASSWORD || 'password',\n\tdatabase: process.env.MYSQL_DATABASE || 'test'\n});\n\nconnection.connect((err) => {\n\tif (err) {\n\t\tconsole.error('error connecting mysql: ', err);\n\t} else {\n\t\tconsole.log('mysql connection successful');\n\t\tapp.listen(PORT, HOST, (err) => {\n\t\t\tif (err) {\n\t\t\t\tconsole.error('Error starting  server', err);\n\t\t\t} else {\n\t\t\t\tconsole.log('server listening at port ' + PORT);\n\t\t\t}\n\t\t});\n\t}\n});\n\n// home page\napp.get('/', (req, res) => {\n\tres.json({\n\t\tsuccess: true,\n\t\tmessage: 'Hello Healthix. This is a Database-Passthrough Mediator'\n\t});\n});\n\n// insert a student into database\napp.post('/add-student', (req, res) => {\n\tconst student = req.body;\n\tconst query = 'INSERT INTO students values(?, ?)';\n\n\tconnection.query(query, [student.rollNo, student.name], (err, results, fields) => {\n\t\tif (err) {\n\t\t\tconsole.error(err);\n\t\t\tres.json({\n\t\t\t\tsuccess: false,\n\t\t\t\tmessage: 'Error occured'\n\t\t\t});\n\t\t} else {\n\t\t\tres.json({\n\t\t\t\tsuccess: true,\n\t\t\t\tmessage: 'Successfully added student'\n\t\t\t});\n\t\t}\n\t});\n});\n\n// fetch all students\napp.post('/get-students', (req, res) => {\n\tconst query = 'SELECT * FROM students';\n    connection.query(query, (err, results, fields) => {\n    \tif (err) {\n    \t\tconsole.error(err);\n    \t\tres.json({\n    \t\t\tsuccess: false,\n    \t\t\tmessage: 'Error occured'\n    \t\t});\n    \t} else {\n    \t\tres.json({\n    \t\t\tsuccess: true,\n    \t\t\tresult: results\n    \t\t});\n    \t}\n    });\n});\n\nconst openhimConfig = {\n  username: 'root@openhim.org',\n  password: 'mburu2834',\n  apiURL: 'https://localhost:8080',\n  trustSelfSigned: true\n}\n\n\nregisterMediator(openhimConfig, mediatorConfig, err => {\n  if (err) {\n    console.error('Mediatior registration failed',err)\n  }\n    console.log('New mediator registration successful');\n})\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1598079120189
  }
}